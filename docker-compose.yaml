version: "3.0"
services:

  # Observability stack
  otel_integration_testing:
    container_name: otel_integration_testing
    user: "1000:1000"
    # Using older version as some extensions we use in the config have been removed in newer - needs patching properly
    image: otel/opentelemetry-collector-contrib:0.81.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./observability/opentelemetry-collector-integration.yaml:/etc/otel-collector.yaml
      - /etc/nginx/ca.crt:/etc/ssl/certs/ca.crt
      - /etc/nginx/ca.key:/etc/ssl/certs/ca.key
    ports:
      - "10003:10003"   # OTLP GRPC
      - "10000:10000"   # Prometheus metrics (of what's sent to opentelemetry-collector)
      - "10006:8888"    # Prometheus metrics (of opentelemetry-collector's own metrics)
    networks:
      - perf

  otel_performance_testing:
    container_name: otel_performance_testing
    user: "1000:1000"
    image: otel/opentelemetry-collector-contrib:0.81.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./observability/opentelemetry-collector-performance.yaml:/etc/otel-collector.yaml
      - /etc/nginx/ca.crt:/etc/ssl/certs/ca.crt
      - /etc/nginx/ca.key:/etc/ssl/certs/ca.key
    ports:
      - "10001:10001"   # OTLP GRPC
      - "10002:10002"   # Prometheus metrics (of what's sent to opentelemetry-collector)
      - "10005:8888"    # Prometheus metrics (of opentelemetry-collector's own metrics)
      - "1888:1888"     # pprof extension
      - "13133:13133"   # health_check extension
      - "55679:55679"   # zpages extension
    networks:
      - perf

  otel_adhoc_testing:
    container_name: otel_adhoc_testing
    user: "1000:1000"
    image: otel/opentelemetry-collector-contrib:0.81.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./observability/opentelemetry-collector-adhoc.yaml:/etc/otel-collector.yaml
      - /etc/nginx/ca.crt:/etc/ssl/certs/ca.crt
      - /etc/nginx/ca.key:/etc/ssl/certs/ca.key
    ports:
      - "4317:4317"     # OTLP GRPC
      - "10004:10004"   # Prometheus metrics (of what's sent to opentelemetry-collector)
      - "10007:8888"    # Prometheus metrics (of opentelemetry-collector's own metrics)
    networks:
      - perf

  jaeger:
    container_name: jaeger
    user: "1000:1000"
    image: jaegertracing/all-in-one:latest
    # Jaeger defaults to in-memory, and even with maximum traces set to 100, memory rapidly ballooned until the server
    # crashed.  Trying out Badger, a local storage backend, instead.  Traces are deleted after 72 hours by default.
    environment:
      SPAN_STORAGE_TYPE: badger
      BADGER_EPHEMERAL: "false"
      BADGER_DIRECTORY_VALUE: /badger/data
      BADGER_DIRECTORY_KEY: badger/key
      #QUERY_BASE_PATH: /jaeger
      QUERY_TLS_ENABLED: "true"
      QUERY_TLS_CERT: "/etc/ssl/certs/ca.crt"
      QUERY_TLS_KEY: "/etc/ssl/certs/ca.key"
    command:
     - '--query.base-path=/jaeger'
     - '--query.http.tls.enabled=true'
     - '--query.http.tls.cert=/etc/ssl/certs/ca.crt'
     - '--query.http.tls.key=/etc/ssl/certs/ca.key'
    volumes:
      - /home/ec2-user/jaeger-data-badger:/badger
      - /etc/nginx/ca.crt:/etc/ssl/certs/ca.crt
      - /etc/nginx/ca.key:/etc/ssl/certs/ca.key
    ports:
      - "6831:6831/udp"
      - "16685:16685"  # grpc queries
      - "16686:16686"  # ui
    networks:
      - perf

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./observability/prometheus.yaml:/etc/prometheus.yaml
    command:
     - '--web.external-url=/prometheus/'
     - '--web.route-prefix=/'
     - '--config.file=/etc/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - perf

  # Performance stack
  timedb:
    container_name: timedb
    image: timescale/timescaledb-ha:pg14-latest
    volumes:
      - /home/ec2-user/perf-data:/home/postgres/pgdata/data
    environment:
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    networks:
      - perf

  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./logging/nginx.conf:/etc/nginx/nginx.conf
      - /etc/nginx/ca.crt:/etc/ssl/certs/ca.crt
      - /etc/nginx/ca.key:/etc/ssl/certs/ca.key
    ports:
      - "443:443"
    networks:
      - perf

networks:
  perf:

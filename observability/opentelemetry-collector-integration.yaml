receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:10003
        tls:
          cert_file: "/etc/ssl/certs/ca.crt"
          key_file: "/etc/ssl/certs/ca.key"

  hostmetrics:
    scrapers:
      load:
      cpu:
      disk:
      filesystem:
      memory:
      network:
      paging:
      process:

extensions:
  health_check:
  pprof:
  zpages:

processors:
  batch:
    # Balance keeping the tests fast, with having the ones involving larger number of spans work
    timeout: 50ms

exporters:
  logging:
    loglevel: debug

  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # This is an endpoint exposed by the collector, for Prometheus to scrape
  prometheus:
    endpoint: "0.0.0.0:10000"

  otlp/honeycomb:
    endpoint: "api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": "bQMef6WpRjOr46OL6SDTHM"
      "x-honeycomb-dataset": "sdk.integration"

  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true

service:
  extensions: [health_check,pprof,zpages]

  # Expose opentelemetry-collector's own metrics on this port
  telemetry:
    metrics:
      address: ":8888"

  pipelines:

    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/honeycomb,jaeger]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
